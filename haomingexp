python train.py --gpu 0 --algorithm stdgan --architecture sndcgan --out result_sndcgan --n_dis 1 --adam_beta1 0.5 --adam_beta2 0.999
python train.py --gpu 0 --algorithm orthgan --architecture orthdcgan --out result_orthgan --n_dis 1 --adam_beta1 0.5 --adam_beta2 0.999

'''
W = UdV
Mode 1: ! divided by max SN
Mode 2: ! truncate by 1 SC
Mode 3: ! penalize sum of all log max spectral
Mode 4: ! penalize E(-log(q(x))) q(x)~|N(0,0.2)| & divided by max (failed)
Mode 5: ! penalize E(-log(q(x))) q(x)~|N(0,0.2)| & truncate by 1 (worked)
Mode 6: ! penalize dlogd & divided by max
Mode 7: penalize expd & divided by max
Mode 8: penalize logd & divided by max
'''

# MODE1 Spectrual Norm
python train.py --gpu 0 --algorithm uvgan --architecture uvdcgan --udvmode 1 --out result_uvgan_mode1 --n_dis 1 --adam_beta1 0.5 --adam_beta2 0.999
# MODE2 Spectrual Clipping
python train.py --gpu 0 --algorithm uvgan --architecture uvdcgan --udvmode 2 --out result_uvgan_mode2 --n_dis 1 --adam_beta1 0.5 --adam_beta2 0.999
# MODE3 Lipschitz Reg
python train.py --gpu 0 --algorithm uvgan --architecture uvdcgan --udvmode 3 --out result_uvgan_mode3 --n_dis 1 --adam_beta1 0.5 --adam_beta2 0.999
# MODE5 SC + Divergence Control
python train.py --gpu 0 --algorithm uvgan --architecture uvdcgan --udvmode 5 --out result_uvgan_mode5 --n_dis 1 --adam_beta1 0.5 --adam_beta2 0.999
# MODE8 SN + Penalty Control
python train.py --gpu 0 --algorithm uvgan --architecture uvdcgan --udvmode 8 --out result_uvgan_mode8 --n_dis 1 --adam_beta1 0.5 --adam_beta2 0.999

# Resnet

python train.py --gpu 0 --algorithm stdgan --architecture snresdcgan --out result_ressndcgan --n_dis 5 --adam_beta1 0 --adam_beta2 0.9
python train.py --gpu 0 --algorithm orthgan --architecture orthresdcgan --out result_resorthgan --n_dis 5 --adam_beta1 0 --adam_beta2 0.9

# MODE3 Lipschitz Reg
python train.py --gpu 0 --algorithm uvgan --architecture uvresdcgan --udvmode 3 --out result_resuvgan_mode3 --n_dis 5 --adam_beta1 0 --adam_beta2 0.9
# MODE8 SN + Penalty Control
python train.py --gpu 0 --algorithm uvgan --architecture uvresdcgan --udvmode 8 --out result_resuvgan_mode8 --n_dis 5 --adam_beta1 0 --adam_beta2 0.9

##################################STL-10
python train.py --gpu 0 --algorithm stdgan --architecture sndcgan --out result_sndcgan --n_dis 1 --adam_beta1 0.5 --adam_beta2 0.999 --dataset stl10
python train.py --gpu 0 --algorithm orthgan --architecture orthdcgan --out result_orthgan --n_dis 1 --adam_beta1 0.5 --adam_beta2 0.999 --dataset stl10

# MODE1 Spectrual Norm
python train.py --gpu 0 --algorithm uvgan --architecture uvdcgan --udvmode 1 --out result_uvgan_mode1 --n_dis 1 --adam_beta1 0.5 --adam_beta2 0.999 --dataset stl10
# MODE2 Spectrual Clipping
python train.py --gpu 0 --algorithm uvgan --architecture uvdcgan --udvmode 2 --out result_uvgan_mode2 --n_dis 1 --adam_beta1 0.5 --adam_beta2 0.999 --dataset stl10
# MODE3 Lipschitz Reg
python train.py --gpu 0 --algorithm uvgan --architecture uvdcgan --udvmode 3 --out result_uvgan_mode3 --n_dis 1 --adam_beta1 0.5 --adam_beta2 0.999 --dataset stl10
# MODE5 SC + Divergence Control
python train.py --gpu 0 --algorithm uvgan --architecture uvdcgan --udvmode 5 --out result_uvgan_mode5 --n_dis 1 --adam_beta1 0.5 --adam_beta2 0.999 --dataset stl10
# MODE8 SN + Penalty Control
python train.py --gpu 0 --algorithm uvgan --architecture uvdcgan --udvmode 8 --out result_uvgan_mode8 --n_dis 1 --adam_beta1 0.5 --adam_beta2 0.999 --dataset stl10

# Resnet

python train.py --gpu 0 --algorithm stdgan --architecture snresdcgan --out result_ressndcgan --n_dis 5 --adam_beta1 0 --adam_beta2 0.9 --dataset stl10
python train.py --gpu 0 --algorithm orthgan --architecture orthresdcgan --out result_resorthgan --n_dis 5 --adam_beta1 0 --adam_beta2 0.9 --dataset stl10

# MODE3 Lipschitz Reg
python train.py --gpu 0 --algorithm uvgan --architecture uvresdcgan --udvmode 3 --out result_resuvgan_mode3 --n_dis 5 --adam_beta1 0 --adam_beta2 0.9 --dataset stl10
# MODE8 SN + Penalty Control
python train.py --gpu 0 --algorithm uvgan --architecture uvresdcgan --udvmode 8 --out result_resuvgan_mode8 --n_dis 5 --adam_beta1 0 --adam_beta2 0.9 --dataset stl10
